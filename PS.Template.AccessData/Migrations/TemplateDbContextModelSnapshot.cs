// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PS.Template.AccessData;

namespace PS.Template.AccessData.Migrations
{
    [DbContext(typeof(TemplateDbContext))]
    partial class TemplateDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PS.Template.Domain.Entities.Clinica", b =>
                {
                    b.Property<int>("ClinicaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clinica_desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Clinica_direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartidoId")
                        .HasColumnType("int");

                    b.HasKey("ClinicaId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Clinica");

                    b.HasData(
                        new
                        {
                            ClinicaId = 1,
                            Clinica_desc = "Hospital Interzonal El Cruce",
                            Imagen = "https://bit.ly/3w1u9nf",
                            PartidoId = 1
                        },
                        new
                        {
                            ClinicaId = 2,
                            Clinica_desc = "Clinica Modelo Quilmes",
                            Imagen = "https://bit.ly/3pUaCUF",
                            PartidoId = 2
                        },
                        new
                        {
                            ClinicaId = 3,
                            Clinica_desc = "Hospital Evita Pueblo",
                            Imagen = "https://bit.ly/3jTVMJU",
                            PartidoId = 3
                        },
                        new
                        {
                            ClinicaId = 4,
                            Clinica_desc = "Clinica Monte Grande",
                            Imagen = "https://bit.ly/3w66TEO",
                            PartidoId = 2
                        },
                        new
                        {
                            ClinicaId = 5,
                            Clinica_desc = "Clinica Ranelagh",
                            Imagen = "https://bit.ly/3ExrkgD",
                            PartidoId = 1
                        },
                        new
                        {
                            ClinicaId = 6,
                            Clinica_desc = "Sanatorio Modelo Adrogue",
                            Imagen = "https://bit.ly/3GGkRSH",
                            PartidoId = 3
                        });
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Especialidad", b =>
                {
                    b.Property<int>("EspecialidadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Especialidad_desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("EspecialidadId");

                    b.ToTable("Especialidad");

                    b.HasData(
                        new
                        {
                            EspecialidadId = 1,
                            Especialidad_desc = "Traumatología"
                        },
                        new
                        {
                            EspecialidadId = 2,
                            Especialidad_desc = "Cardiología"
                        },
                        new
                        {
                            EspecialidadId = 3,
                            Especialidad_desc = "Dermatología"
                        });
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Medico", b =>
                {
                    b.Property<int>("MedicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ClinicaId")
                        .HasColumnType("int");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EspecialidadId")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("MedicoId");

                    b.HasIndex("ClinicaId");

                    b.HasIndex("EspecialidadId");

                    b.HasIndex("PartidoId");

                    b.ToTable("Medico");

                    b.HasData(
                        new
                        {
                            MedicoId = 1,
                            Apellido = "Perez",
                            ClinicaId = 1,
                            DNI = "11111111",
                            Email = "doctor1@gmail.com",
                            EspecialidadId = 1,
                            Matricula = "123564",
                            Nombre = "Juan",
                            PartidoId = 1,
                            Telefono = "123456789",
                            UsuarioId = 0
                        },
                        new
                        {
                            MedicoId = 2,
                            Apellido = "Medic",
                            ClinicaId = 1,
                            DNI = "11111123",
                            Email = "doctor2@gmail.com",
                            EspecialidadId = 2,
                            Matricula = "120000",
                            Nombre = "Tito",
                            PartidoId = 3,
                            Telefono = "123456666",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Partido", b =>
                {
                    b.Property<int>("PartidoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Partido_desc")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("PartidoId");

                    b.ToTable("Partido");

                    b.HasData(
                        new
                        {
                            PartidoId = 1,
                            Partido_desc = "Florencio Varela"
                        },
                        new
                        {
                            PartidoId = 2,
                            Partido_desc = "Quilmes"
                        },
                        new
                        {
                            PartidoId = 3,
                            Partido_desc = "Berazategui"
                        });
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Clinica", b =>
                {
                    b.HasOne("PS.Template.Domain.Entities.Partido", "Partido")
                        .WithMany("Clinicas")
                        .HasForeignKey("PartidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Medico", b =>
                {
                    b.HasOne("PS.Template.Domain.Entities.Clinica", "Clinica")
                        .WithMany("Medicos")
                        .HasForeignKey("ClinicaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PS.Template.Domain.Entities.Especialidad", null)
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PS.Template.Domain.Entities.Partido", "Partido")
                        .WithMany("Medicos")
                        .HasForeignKey("PartidoId");

                    b.Navigation("Clinica");

                    b.Navigation("Partido");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Clinica", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Especialidad", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("PS.Template.Domain.Entities.Partido", b =>
                {
                    b.Navigation("Clinicas");

                    b.Navigation("Medicos");
                });
#pragma warning restore 612, 618
        }
    }
}
